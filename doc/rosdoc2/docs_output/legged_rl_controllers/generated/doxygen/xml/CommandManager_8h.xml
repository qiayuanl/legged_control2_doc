<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="CommandManager_8h" kind="file" language="C++">
    <compoundname>CommandManager.h</compoundname>
    <includes local="no">legged_model/LeggedModel.h</includes>
    <includes local="no">memory</includes>
    <includes local="no">string</includes>
    <includes local="no">utility</includes>
    <includes local="no">geometry_msgs/msg/twist_stamped.hpp</includes>
    <includes local="no">rclcpp_lifecycle/lifecycle_node.hpp</includes>
    <includes local="no">realtime_tools/realtime_box.hpp</includes>
    <includes refid="ManagerBased_8h" local="yes">legged_rl_controllers/ManagerBased.h</includes>
    <includedby refid="ObservationManager_8h" local="yes">include/legged_rl_controllers/ObservationManager.h</includedby>
    <includedby refid="RlController_8h" local="yes">include/legged_rl_controllers/RlController.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>include/legged_rl_controllers/CommandManager.h</label>
        <link refid="CommandManager_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>legged_rl_controllers/ManagerBased.h</label>
        <link refid="ManagerBased_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>legged_rl_controllers/ManagerBasedImpl.h</label>
        <link refid="ManagerBasedImpl_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>geometry_msgs/msg/twist_stamped.hpp</label>
      </node>
      <node id="2">
        <label>legged_model/LeggedModel.h</label>
      </node>
      <node id="10">
        <label>legged_model/common.h</label>
      </node>
      <node id="3">
        <label>memory</label>
      </node>
      <node id="7">
        <label>rclcpp_lifecycle/lifecycle_node.hpp</label>
      </node>
      <node id="8">
        <label>realtime_tools/realtime_box.hpp</label>
      </node>
      <node id="4">
        <label>string</label>
      </node>
      <node id="5">
        <label>utility</label>
      </node>
      <node id="11">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>include/legged_rl_controllers/CommandManager.h</label>
        <link refid="CommandManager_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>include/legged_rl_controllers/ObservationManager.h</label>
        <link refid="ObservationManager_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>include/legged_rl_controllers/OnnxController.h</label>
        <link refid="OnnxController_8h_source"/>
      </node>
      <node id="3">
        <label>include/legged_rl_controllers/RlController.h</label>
        <link refid="RlController_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classlegged_1_1CommandTerm" prot="public">legged::CommandTerm</innerclass>
    <innerclass refid="classlegged_1_1CommandManager" prot="public">legged::CommandManager</innerclass>
    <innerclass refid="classlegged_1_1VelocityTopicCommandTerm" prot="public">legged::VelocityTopicCommandTerm</innerclass>
    <innernamespace refid="namespacelegged">legged</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Created<sp/>by<sp/>qiayuanl<sp/>on<sp/>3/6/25.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;legged_model/LeggedModel.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;geometry_msgs/msg/twist_stamped.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;rclcpp_lifecycle/lifecycle_node.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;realtime_tools/realtime_box.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;legged_rl_controllers/ManagerBased.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">legged<sp/>{</highlight></codeline>
<codeline lineno="19" refid="classlegged_1_1CommandTerm" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlegged_1_1CommandTerm" kindref="compound">CommandTerm</ref><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">SharedPtr<sp/>=<sp/>std::shared_ptr&lt;CommandTerm&gt;;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><ref refid="classlegged_1_1CommandTerm" kindref="compound">CommandTerm</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classlegged_1_1CommandTerm" kindref="compound">~CommandTerm</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>vector_t<sp/>getValue()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset()<sp/>{}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>getSize()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setModel(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>LeggedModel::SharedPtr&amp;<sp/>model)<sp/>{<sp/>model_<sp/>=<sp/>model;<sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>LeggedModel::SharedPtr<sp/>model_;</highlight></codeline>
<codeline lineno="32"><highlight class="normal">};</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="classlegged_1_1CommandManager" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlegged_1_1CommandManager" kindref="compound">CommandManager</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classlegged_1_1ManagerBase" kindref="compound">ManagerBase</ref>&lt;CommandTerm&gt;<sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">ManagerBase::ManagerBase;</highlight></codeline>
<codeline lineno="36"><highlight class="normal">};</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="classlegged_1_1VelocityTopicCommandTerm" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classlegged_1_1VelocityTopicCommandTerm" kindref="compound">VelocityTopicCommandTerm</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classlegged_1_1CommandTerm" kindref="compound">CommandTerm</ref><sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">Twist<sp/>=<sp/>geometry_msgs::msg::TwistStamped;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><ref refid="classlegged_1_1VelocityTopicCommandTerm" kindref="compound">VelocityTopicCommandTerm</ref>(rclcpp_lifecycle::LifecycleNode::SharedPtr<sp/>node,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>topicName)<sp/>:<sp/>node_(std::move(node))<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>subscriber_<sp/>=<sp/>node_-&gt;create_subscription&lt;Twist&gt;(topicName,<sp/>10,<sp/>[</highlight><highlight class="keyword">this</highlight><highlight class="normal">](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Twist::SharedPtr<sp/>msg)<sp/>{<sp/>receivedMsg_.set(msg);<sp/>});</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>vector_t<sp/>getValue()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Twist&gt;<sp/>lastCommandMsg;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>receivedMsg_.get(lastCommandMsg);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>timeNow<sp/>=<sp/>node_-&gt;get_clock()-&gt;now();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lastCommandMsg-&gt;header.stamp.sec<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>lastCommandMsg-&gt;header.stamp.nanosec<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>RCLCPP_WARN_ONCE(node_-&gt;get_logger(),</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Received<sp/>TwistStamped<sp/>with<sp/>zero<sp/>timestamp,<sp/>setting<sp/>it<sp/>to<sp/>current<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;time,<sp/>this<sp/>message<sp/>will<sp/>only<sp/>be<sp/>shown<sp/>once&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lastCommandMsg-&gt;header.stamp<sp/>=<sp/>timeNow;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>vector_t<sp/>command<sp/>=<sp/>vector_t::Zero(3);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(timeNow<sp/>-<sp/>lastCommandMsg-&gt;header.stamp<sp/>&lt;<sp/>std::chrono::milliseconds{static_cast&lt;int&gt;(0.5<sp/>*<sp/>1000.0)})<sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>command<sp/>&lt;&lt;<sp/>lastCommandMsg-&gt;twist.linear.x,<sp/>lastCommandMsg-&gt;twist.linear.y,<sp/>lastCommandMsg-&gt;twist.angular.z;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>command;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reset()</highlight><highlight class="keyword"><sp/>override<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>twist<sp/>=<sp/>std::make_shared&lt;Twist&gt;();</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>receivedMsg_.set(twist);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>getSize()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>3;<sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>rclcpp_lifecycle::LifecycleNode::SharedPtr<sp/>node_;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>rclcpp::Subscription&lt;Twist&gt;::SharedPtr<sp/>subscriber_;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>realtime_tools::RealtimeBox&lt;std::shared_ptr&lt;Twist&gt;&gt;<sp/>receivedMsg_;</highlight></codeline>
<codeline lineno="73"><highlight class="normal">};</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>legged</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="include/legged_rl_controllers/CommandManager.h"/>
  </compounddef>
</doxygen>
